name: smart test selection

on:
  pull_request:

jobs:

  coverage-ats:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      ATS_TESTS_TO_RUN: ${{ steps.label_analysis.outputs.ATS_TESTS_TO_RUN }}
      ATS_TESTS_TO_SKIP: ${{ steps.label_analysis.outputs.ATS_TESTS_TO_SKIP }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2
    - name: Set up Python 3.10.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10.10"
    # We need the setup to collect the list of tests properly
    - name: Download Codecov CLI
      run: |
        pip install codecov-cli
    # Creates the commit and report objects in codecov
    - name: Codecov startup
      run: |
        codecovcli create-commit
        codecovcli create-report
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    # Sends static analysis information to codecov
    - name: Static Analysis
      run: |
        codecovcli static-analysis --token=${CODECOV_STATIC_TOKEN} \
        --folders-to-exclude .artifacts \
        --folders-to-exclude .github \
        --folders-to-exclude .venv \
        --folders-to-exclude static \
        --folders-to-exclude bin
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        CODECOV_STATIC_TOKEN: ${{ secrets.STATIC_TOKEN }}
    - name: Install requirements
      run: pip install -r requirements.txt
    # Run label analysis in dry mode to get the list of tests to run
    # The base commit will be the parent commit (apparently commits on master don't exist in codecov)
    # The CLI might fail the label-analysis command for reasons
    # If that's the case we still want to do some post-processing (the else part below) to generate the correct outputs
    - name: Label Analysis
      id: label_analysis
      continue-on-error: true
      run: |
        BASE_COMMIT=$(git rev-parse ${{ github.sha }}^)
        echo $BASE_COMMIT
        output=$(codecovcli --codecov-yml-path=codecov.yml label-analysis --dry-run --token=${CODECOV_STATIC_TOKEN} --base-sha=${BASE_COMMIT}) || true
        if [ -n "${output}" ];
        then
          json_output=$(echo $output | grep -o -e "{.*}")

          echo ATS_TESTS_TO_RUN=$(jq <<< $json_output '.runner_options + .ats_tests_to_run | map(@sh) | join(" ")' --raw-output) >> "$GITHUB_OUTPUT"
          echo ATS_TESTS_TO_SKIP=$(jq <<< $json_output '.runner_options + .ats_tests_to_skip | map(@sh) | join(" ")' --raw-output) >> "$GITHUB_OUTPUT"

          test_to_run_count=$(echo $json_output | jq '.ats_tests_to_run | length')
          test_to_skip_count=$(echo $json_output | jq '.ats_tests_to_skip | length')
          total_tests_count=$(($test_to_run_count + $test_to_skip_count))
          echo "Selected $test_to_run_count / $total_tests_count tests to run" >> $GITHUB_STEP_SUMMARY
        else
          tee <<< "ATS failed. Can't get list of tests to run. Fallback to all tests" "$GITHUB_STEP_SUMMARY"
          echo "ATS_TESTS_TO_RUN=--cov-context=test" >> "$GITHUB_OUTPUT"
          echo "ATS_TESTS_TO_SKIP=" >> "$GITHUB_OUTPUT"
        fi
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        CODECOV_STATIC_TOKEN: ${{ secrets.STATIC_TOKEN }}
  debug:
    runs-on: ubuntu-latest
    needs: coverage-ats
    steps:
      - name: Debug ATS_TESTS_TO_RUN
        run: |
          echo ${{ needs.coverage-ats.outputs.ATS_TESTS_TO_RUN }}
      - name: Debug ATS_TESTS_TO_SKIP
        run: |
          echo ${{ needs.coverage-ats.outputs.ATS_TESTS_TO_SKIP }}
          
